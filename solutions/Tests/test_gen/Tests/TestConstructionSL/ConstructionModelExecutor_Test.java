package Tests.TestConstructionSL;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.ClassRule;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.Rule;
import jetbrains.mps.lang.test.runtime.RunWithCommand;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import jetbrains.mps.lang.test.runtime.TransformationTest;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.test.runtime.CheckExpectedMessageRunnable;
import jetbrains.mps.errors.MessageStatus;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.project.ProjectBase;

@MPSLaunch
public class ConstructionModelExecutor_Test extends BaseTransformationTest {
  @ClassRule
  public static final TestParametersCache ourParamCache = new TestParametersCache(ConstructionModelExecutor_Test.class, "${mps.macro.DemoWB.home}", "r:241ca50b-85e3-48fe-b819-53b8bef6e1b5(Tests.TestConstructionSL@tests)", false);
  @Rule
  public final RunWithCommand myWithCommandRule = new RunWithCommand(this);

  public ConstructionModelExecutor_Test() {
    super(ourParamCache);
  }

  @Test
  public void test_NodeExecutorOfTransactionkindCheck4919393501064260734() throws Throwable {
    new TestBody(this).test_NodeExecutorOfTransactionkindCheck4919393501064260734();
  }
  @Test
  public void test_NodeExecutorOfTransactionkindCheck4919393501064260736() throws Throwable {
    new TestBody(this).test_NodeExecutorOfTransactionkindCheck4919393501064260736();
  }

  /*package*/ static class TestBody extends BaseTestBody {

    /*package*/ TestBody(TransformationTest owner) {
      super(owner);
    }


    public void test_NodeExecutorOfTransactionkindCheck4919393501064260734() throws Exception {
      SNode nodeToCheck = getRealNodeById("4919393501061417338");
      SNode operation = getRealNodeById("4919393501064260734");
      new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:193653c7-3212-43f4-a914-3e7a9fb7bf10(ConstructionSL.typesystem)", "5179980272475003321"), "", myProject.getRepository(), ((ProjectBase) myProject).getPlatform()).run();
    }
    public void test_NodeExecutorOfTransactionkindCheck4919393501064260736() throws Exception {
      SNode nodeToCheck = getRealNodeById("4919393501061417338");
      SNode operation = getRealNodeById("4919393501064260736");
      new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:193653c7-3212-43f4-a914-3e7a9fb7bf10(ConstructionSL.typesystem)", "4919393501061420836"), "", myProject.getRepository(), ((ProjectBase) myProject).getPlatform()).run();
    }

  }
}
