package AWSStateMachine.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.SubstituteMenu;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new BooleanValue_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new ChoiceRule_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new Comparison_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new IntegerValue_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new State_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new StateInput_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new StateMachine_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new StringValue_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new Variable_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new VariableReference_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }


  @NotNull
  @Override
  public Collection<SubstituteMenu> getDeclaredDefaultSubstituteMenus(SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex1.index(cncpt)) {
      case 0:
        return Collections.<SubstituteMenu>singletonList(new ChoiceRule_SubstituteMenu());
      case 1:
        return Collections.<SubstituteMenu>singletonList(new Comparison_SubstituteMenu());
      case 2:
        return Collections.<SubstituteMenu>singletonList(new StateMachine_SubstituteMenu());
      case 3:
        return Collections.<SubstituteMenu>singletonList(new VariableReference_SubstituteMenu());
      default:
    }
    return Collections.<SubstituteMenu>emptyList();
  }

  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xad34076bb44b4b8eL, 0x9aa6566fa22fe764L, 0x8f316006ed4bbdL), MetaIdFactory.conceptId(0xad34076bb44b4b8eL, 0x9aa6566fa22fe764L, 0x4c74ef895ad44f4aL), MetaIdFactory.conceptId(0xad34076bb44b4b8eL, 0x9aa6566fa22fe764L, 0x4c74ef895ad48f71L), MetaIdFactory.conceptId(0xad34076bb44b4b8eL, 0x9aa6566fa22fe764L, 0x8f316006ed4bc3L), MetaIdFactory.conceptId(0xad34076bb44b4b8eL, 0x9aa6566fa22fe764L, 0x4c74ef895ac6a525L), MetaIdFactory.conceptId(0xad34076bb44b4b8eL, 0x9aa6566fa22fe764L, 0x4c74ef895ad7d402L), MetaIdFactory.conceptId(0xad34076bb44b4b8eL, 0x9aa6566fa22fe764L, 0x4c74ef895ac6a51fL), MetaIdFactory.conceptId(0xad34076bb44b4b8eL, 0x9aa6566fa22fe764L, 0x8f316006ed4bb7L), MetaIdFactory.conceptId(0xad34076bb44b4b8eL, 0x9aa6566fa22fe764L, 0x4c74ef895ad48f7bL), MetaIdFactory.conceptId(0xad34076bb44b4b8eL, 0x9aa6566fa22fe764L, 0x4c74ef895ad48f7eL)).seal();
  private static final ConceptSwitchIndex conceptIndex1 = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xad34076bb44b4b8eL, 0x9aa6566fa22fe764L, 0x4c74ef895ad44f4aL), MetaIdFactory.conceptId(0xad34076bb44b4b8eL, 0x9aa6566fa22fe764L, 0x4c74ef895ad48f71L), MetaIdFactory.conceptId(0xad34076bb44b4b8eL, 0x9aa6566fa22fe764L, 0x4c74ef895ac6a51fL), MetaIdFactory.conceptId(0xad34076bb44b4b8eL, 0x9aa6566fa22fe764L, 0x4c74ef895ad48f7eL)).seal();
}
