package AWSStateMachine.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myValue__BehaviorDescriptor = new Value__BehaviorDescriptor();
  private final BHDescriptor myStringValue__BehaviorDescriptor = new StringValue__BehaviorDescriptor();
  private final BHDescriptor myBooleanValue__BehaviorDescriptor = new BooleanValue__BehaviorDescriptor();
  private final BHDescriptor myIntegerValue__BehaviorDescriptor = new IntegerValue__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myBooleanValue__BehaviorDescriptor;
      case 1:
        return myIntegerValue__BehaviorDescriptor;
      case 2:
        return myStringValue__BehaviorDescriptor;
      case 3:
        return myValue__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xad34076bb44b4b8eL, 0x9aa6566fa22fe764L, 0x8f316006ed4bbdL), MetaIdFactory.conceptId(0xad34076bb44b4b8eL, 0x9aa6566fa22fe764L, 0x8f316006ed4bc3L), MetaIdFactory.conceptId(0xad34076bb44b4b8eL, 0x9aa6566fa22fe764L, 0x8f316006ed4bb7L), MetaIdFactory.conceptId(0xad34076bb44b4b8eL, 0x9aa6566fa22fe764L, 0x8f316006ed4bb3L)).seal();
}
