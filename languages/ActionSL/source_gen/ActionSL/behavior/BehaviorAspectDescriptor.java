package ActionSL.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myActionRule__BehaviorDescriptor = new ActionRule__BehaviorDescriptor();
  private final BHDescriptor myWhen__BehaviorDescriptor = new When__BehaviorDescriptor();
  private final BHDescriptor myWith__BehaviorDescriptor = new With__BehaviorDescriptor();
  private final BHDescriptor myRespons__BehaviorDescriptor = new Respons__BehaviorDescriptor();
  private final BHDescriptor myActionClause__BehaviorDescriptor = new ActionClause__BehaviorDescriptor();
  private final BHDescriptor myWithClause__BehaviorDescriptor = new WithClause__BehaviorDescriptor();
  private final BHDescriptor myTransactionReference__BehaviorDescriptor = new TransactionReference__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myActionClause__BehaviorDescriptor;
      case 1:
        return myActionRule__BehaviorDescriptor;
      case 2:
        return myRespons__BehaviorDescriptor;
      case 3:
        return myTransactionReference__BehaviorDescriptor;
      case 4:
        return myWhen__BehaviorDescriptor;
      case 5:
        return myWith__BehaviorDescriptor;
      case 6:
        return myWithClause__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xe81fc11716974e77L, 0x8b544a5aa8f4ea97L, 0x460ba1d75e57db6aL), MetaIdFactory.conceptId(0xe81fc11716974e77L, 0x8b544a5aa8f4ea97L, 0x585f5ae0f823b54L), MetaIdFactory.conceptId(0xe81fc11716974e77L, 0x8b544a5aa8f4ea97L, 0x460ba1d75e56459aL), MetaIdFactory.conceptId(0xe81fc11716974e77L, 0x8b544a5aa8f4ea97L, 0x5ed15a66c85ec47fL), MetaIdFactory.conceptId(0xe81fc11716974e77L, 0x8b544a5aa8f4ea97L, 0x460ba1d75e449a11L), MetaIdFactory.conceptId(0xe81fc11716974e77L, 0x8b544a5aa8f4ea97L, 0x460ba1d75e5060d8L), MetaIdFactory.conceptId(0xe81fc11716974e77L, 0x8b544a5aa8f4ea97L, 0x460ba1d75e57dba1L)).seal();
}
