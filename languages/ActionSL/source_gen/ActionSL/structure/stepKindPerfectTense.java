package ActionSL.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum stepKindPerfectTense {
  initialized("initialized", "in"),
  requested("requested", "rq"),
  promised("promised", "pm"),
  executed("executed", "ex"),
  stated("stated", "st"),
  accepted("accepted", "ac"),
  declined("declined", "dc"),
  quitted("quitted", "qt"),
  rejected("rejected", "rj"),
  stopped("stopped", "sp");

  private final String myName;
  public String getName() {
    return myName;
  }
  private final String myValue;
  private stepKindPerfectTense(String name, String value) {
    myName = name;
    myValue = value;
  }
  public String getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return myValue;
  }
  public static List<stepKindPerfectTense> getConstants() {
    List<stepKindPerfectTense> list = ListSequence.fromList(new LinkedList<stepKindPerfectTense>());
    ListSequence.fromList(list).addElement(stepKindPerfectTense.initialized);
    ListSequence.fromList(list).addElement(stepKindPerfectTense.requested);
    ListSequence.fromList(list).addElement(stepKindPerfectTense.promised);
    ListSequence.fromList(list).addElement(stepKindPerfectTense.executed);
    ListSequence.fromList(list).addElement(stepKindPerfectTense.stated);
    ListSequence.fromList(list).addElement(stepKindPerfectTense.accepted);
    ListSequence.fromList(list).addElement(stepKindPerfectTense.declined);
    ListSequence.fromList(list).addElement(stepKindPerfectTense.quitted);
    ListSequence.fromList(list).addElement(stepKindPerfectTense.rejected);
    ListSequence.fromList(list).addElement(stepKindPerfectTense.stopped);
    return list;
  }
  public static stepKindPerfectTense getDefault() {
    return null;
  }
  public static stepKindPerfectTense parseValue(String value) {
    if (value == null) {
      return stepKindPerfectTense.getDefault();
    }
    if (value.equals(stepKindPerfectTense.initialized.getValueAsString())) {
      return stepKindPerfectTense.initialized;
    }
    if (value.equals(stepKindPerfectTense.requested.getValueAsString())) {
      return stepKindPerfectTense.requested;
    }
    if (value.equals(stepKindPerfectTense.promised.getValueAsString())) {
      return stepKindPerfectTense.promised;
    }
    if (value.equals(stepKindPerfectTense.executed.getValueAsString())) {
      return stepKindPerfectTense.executed;
    }
    if (value.equals(stepKindPerfectTense.stated.getValueAsString())) {
      return stepKindPerfectTense.stated;
    }
    if (value.equals(stepKindPerfectTense.accepted.getValueAsString())) {
      return stepKindPerfectTense.accepted;
    }
    if (value.equals(stepKindPerfectTense.declined.getValueAsString())) {
      return stepKindPerfectTense.declined;
    }
    if (value.equals(stepKindPerfectTense.quitted.getValueAsString())) {
      return stepKindPerfectTense.quitted;
    }
    if (value.equals(stepKindPerfectTense.rejected.getValueAsString())) {
      return stepKindPerfectTense.rejected;
    }
    if (value.equals(stepKindPerfectTense.stopped.getValueAsString())) {
      return stepKindPerfectTense.stopped;
    }
    return stepKindPerfectTense.getDefault();
  }
}
