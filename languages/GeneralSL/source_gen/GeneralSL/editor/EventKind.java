package GeneralSL.editor;

/*Generated by MPS */

import de.itemis.mps.editor.diagram.runtime.shape.AbstractShape;
import org.jetbrains.annotations.Nullable;
import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;
import de.itemis.mps.editor.diagram.runtime.shape.IShapeStyle;
import java.awt.geom.GeneralPath;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;

public class EventKind extends AbstractShape {

  private String name;

  public EventKind(String name) {
    this.name = name;
  }

  @Nullable
  @Override
  public Double getDefaultSize() {
    return ((double) (15));
  }



  @Override
  protected void draw(final Graphics2D graphics, final Rectangle2D bounds, IShapeStyle style) {
    GeneralPath shape = new GeneralPath();
    double width = bounds.getWidth();
    double height = bounds.getHeight();
    double x = bounds.getX() + width / 2;
    double y = bounds.getY() + height / 2;
    double r = 30;
    double kappa = 0.5522847498;


    shape.moveTo(x - r, y);
    graphics.setStroke(new BasicStroke(2));
    graphics.setColor(new Color(147, 9, 4));
    shape.lineTo(x, y - r);
    shape.lineTo(x + r, y);
    shape.lineTo(x, y + r);
    shape.closePath();
    graphics.draw(shape);
    graphics.setColor(new Color(255, 255, 128));
    graphics.fill(shape);

    // TODO how to print the name of the event 
    graphics.setColor(new Color(147, 9, 4));
    graphics.setColor(Color.BLACK);
    graphics.setFont(new Font("Helvetica", Font.PLAIN, 11));
    graphics.drawString(this.name, (float) ((x - (this.name.length() * 6) / 2)), (float) (y + r + 15));
    // TODO how to print the name of the transaction 
  }

}
