package GeneralSL.editor;

/*Generated by MPS */

import de.itemis.mps.editor.diagram.runtime.shape.AbstractShape;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;
import org.jetbrains.annotations.Nullable;
import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;
import de.itemis.mps.editor.diagram.runtime.shape.IShapeStyle;
import java.awt.geom.GeneralPath;
import jetbrains.mps.baseLanguage.logging.runtime.model.LoggingRuntime;
import org.apache.log4j.Level;

public class Transaction extends AbstractShape {
  private static final Logger LOG = LogManager.getLogger(Transaction.class);

  private boolean filled;

  public Transaction(boolean filled) {
    this.filled = filled;
  }

  @Nullable
  @Override
  public Double getDefaultSize() {
    return ((double) (15));
  }



  @Override
  protected void draw(final Graphics2D graphics, final Rectangle2D bounds, IShapeStyle style) {
    GeneralPath shape = new GeneralPath();
    double width = bounds.getWidth();
    double height = bounds.getHeight();
    double x = bounds.getX() + width / 2;
    double y = bounds.getY() + height / 2;
    double r = width / 2 + 10;

    double kappa = 0.5522847498;


    shape.moveTo(x, y - r);
    shape.curveTo(x + r * kappa, y - r, x + r, y - r * kappa, x + r, y);
    shape.curveTo(x + r, y + r * kappa, x + r * kappa, y + r, x, y + r);
    shape.curveTo(x - r * kappa, y + r, x - r, y + r * kappa, x - r, y);
    shape.curveTo(x - r, y - r * kappa, x - r * kappa, y - r, x, y - r);

    if (this.filled) {
      shape.closePath();
    }

    if (this.filled) {
      graphics.fill(shape);
    } else {
      graphics.draw(shape);
    }

    GeneralPath shape2 = new GeneralPath();
    shape2.moveTo(x - r, y);
    shape2.lineTo(x, y - r);
    shape2.lineTo(x + r, y);
    shape2.lineTo(x, y + r);
    if (LOG.isInfoEnabled()) {
      LoggingRuntime.legacyLog(Level.INFO, "bounds.getX : " + bounds.getX(), Transaction.class, null);
    }
    if (LOG.isInfoEnabled()) {
      LoggingRuntime.legacyLog(Level.INFO, "bounds.getY : " + bounds.getY(), Transaction.class, null);
    }
    shape2.closePath();
    graphics.draw(shape2);
  }

}
