package FactSL.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum eventLawType {
  precludes("precludes", "precludes"),
  precedes("precedes", "precedes");

  private final String myName;
  public String getName() {
    return myName;
  }
  private final String myValue;
  private eventLawType(String name, String value) {
    myName = name;
    myValue = value;
  }
  public String getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return myValue;
  }
  public static List<eventLawType> getConstants() {
    List<eventLawType> list = ListSequence.fromList(new LinkedList<eventLawType>());
    ListSequence.fromList(list).addElement(eventLawType.precludes);
    ListSequence.fromList(list).addElement(eventLawType.precedes);
    return list;
  }
  public static eventLawType getDefault() {
    return eventLawType.precedes;
  }
  public static eventLawType parseValue(String value) {
    if (value == null) {
      return eventLawType.getDefault();
    }
    if (value.equals(eventLawType.precludes.getValueAsString())) {
      return eventLawType.precludes;
    }
    if (value.equals(eventLawType.precedes.getValueAsString())) {
      return eventLawType.precedes;
    }
    return eventLawType.getDefault();
  }
}
