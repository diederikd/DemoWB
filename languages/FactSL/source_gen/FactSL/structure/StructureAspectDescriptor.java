package FactSL.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAmount = createDescriptorForAmount();
  /*package*/ final ConceptDescriptor myConceptArea = createDescriptorForArea();
  /*package*/ final ConceptDescriptor myConceptAttributeType = createDescriptorForAttributeType();
  /*package*/ final ConceptDescriptor myConceptBaseEntityType = createDescriptorForBaseEntityType();
  /*package*/ final ConceptDescriptor myConceptConstructedEntityType = createDescriptorForConstructedEntityType();
  /*package*/ final ConceptDescriptor myConceptDuration = createDescriptorForDuration();
  /*package*/ final ConceptDescriptor myConceptEntityType = createDescriptorForEntityType();
  /*package*/ final ConceptDescriptor myConceptEventType = createDescriptorForEventType();
  /*package*/ final ConceptDescriptor myConceptFactType = createDescriptorForFactType();
  /*package*/ final ConceptDescriptor myConceptIPropertyType = createDescriptorForIPropertyType();
  /*package*/ final ConceptDescriptor myConceptLength = createDescriptorForLength();
  /*package*/ final ConceptDescriptor myConceptMass = createDescriptorForMass();
  /*package*/ final ConceptDescriptor myConceptNumber = createDescriptorForNumber();
  /*package*/ final ConceptDescriptor myConceptPropertyType = createDescriptorForPropertyType();
  /*package*/ final ConceptDescriptor myConceptTemperature = createDescriptorForTemperature();
  /*package*/ final ConceptDescriptor myConceptTime = createDescriptorForTime();
  /*package*/ final ConceptDescriptor myConceptTruthValue = createDescriptorForTruthValue();
  /*package*/ final ConceptDescriptor myConceptValueType = createDescriptorForValueType();
  /*package*/ final ConceptDescriptor myConceptVelocity = createDescriptorForVelocity();
  /*package*/ final ConceptDescriptor myConceptVolume = createDescriptorForVolume();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAmount, myConceptArea, myConceptAttributeType, myConceptBaseEntityType, myConceptConstructedEntityType, myConceptDuration, myConceptEntityType, myConceptEventType, myConceptFactType, myConceptIPropertyType, myConceptLength, myConceptMass, myConceptNumber, myConceptPropertyType, myConceptTemperature, myConceptTime, myConceptTruthValue, myConceptValueType, myConceptVelocity, myConceptVolume);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Amount:
        return myConceptAmount;
      case LanguageConceptSwitch.Area:
        return myConceptArea;
      case LanguageConceptSwitch.AttributeType:
        return myConceptAttributeType;
      case LanguageConceptSwitch.BaseEntityType:
        return myConceptBaseEntityType;
      case LanguageConceptSwitch.ConstructedEntityType:
        return myConceptConstructedEntityType;
      case LanguageConceptSwitch.Duration:
        return myConceptDuration;
      case LanguageConceptSwitch.EntityType:
        return myConceptEntityType;
      case LanguageConceptSwitch.EventType:
        return myConceptEventType;
      case LanguageConceptSwitch.FactType:
        return myConceptFactType;
      case LanguageConceptSwitch.IPropertyType:
        return myConceptIPropertyType;
      case LanguageConceptSwitch.Length:
        return myConceptLength;
      case LanguageConceptSwitch.Mass:
        return myConceptMass;
      case LanguageConceptSwitch.Number:
        return myConceptNumber;
      case LanguageConceptSwitch.PropertyType:
        return myConceptPropertyType;
      case LanguageConceptSwitch.Temperature:
        return myConceptTemperature;
      case LanguageConceptSwitch.Time:
        return myConceptTime;
      case LanguageConceptSwitch.TruthValue:
        return myConceptTruthValue;
      case LanguageConceptSwitch.ValueType:
        return myConceptValueType;
      case LanguageConceptSwitch.Velocity:
        return myConceptVelocity;
      case LanguageConceptSwitch.Volume:
        return myConceptVolume;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAmount() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "Amount", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa83b31L);
    b.class_(false, false, false);
    b.super_("FactSL.structure.ValueType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0b0L);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872035015473");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArea() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "Area", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa83b34L);
    b.class_(false, false, false);
    b.super_("FactSL.structure.ValueType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0b0L);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872035015476");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "AttributeType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0aeL);
    b.class_(false, false, false);
    b.super_("FactSL.structure.PropertyType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0a9L);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872034984110");
    b.version(2);
    b.associate("arange", 0x2613bb9aeaa7c0afL).target(0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0b0L).optional(false).origin("2743742872034984111").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBaseEntityType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "BaseEntityType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0a7L);
    b.class_(false, false, false);
    b.super_("FactSL.structure.EntityType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0a6L);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872034984103");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstructedEntityType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "ConstructedEntityType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0a8L);
    b.class_(false, false, false);
    b.super_("FactSL.structure.EntityType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0a6L);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872034984104");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDuration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "Duration", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa83b2eL);
    b.class_(false, false, false);
    b.super_("FactSL.structure.ValueType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0b0L);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872035015470");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEntityType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "EntityType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0a6L);
    b.class_(false, true, false);
    b.super_("FactSL.structure.FactType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa69f0fL);
    b.parent(0xaa59ea5e1883437fL, 0x95c04dc082aa848cL, 0x2613bb9aeaa0eb4fL);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872034984102");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEventType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "EventType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0a5L);
    b.class_(false, false, false);
    b.super_("FactSL.structure.FactType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa69f0fL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872034984101");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFactType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "FactType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa69f0fL);
    b.class_(false, true, false);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872034909967");
    b.version(2);
    b.prop("id", 0x2613bb9aeaa7c0a4L, "2743742872034984100");
    b.prop("type", 0x585f5ae0f847f15L, "397994270025613077");
    b.alias("FactKind");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIPropertyType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "IPropertyType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa83b3aL);
    b.interface_();
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872035015482");
    b.version(2);
    b.prop("minCardDomain", 0x2613bb9aeaa83b3bL, "2743742872035015483");
    b.prop("maxCardDomain", 0x2613bb9aeaa83b3dL, "2743742872035015485");
    b.prop("minCardRange", 0x2613bb9aeaa83b40L, "2743742872035015488");
    b.prop("maxCardRange", 0x2613bb9aeaa83b44L, "2743742872035015492");
    b.associate("domain", 0x2613bb9aeaa7c0aaL).target(0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0a6L).optional(false).origin("2743742872034984106").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLength() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "Length", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa83b33L);
    b.class_(false, false, false);
    b.super_("FactSL.structure.ValueType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0b0L);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872035015475");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMass() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "Mass", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa83b32L);
    b.class_(false, false, false);
    b.super_("FactSL.structure.ValueType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0b0L);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872035015474");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNumber() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "Number", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa83b38L);
    b.class_(false, false, false);
    b.super_("FactSL.structure.ValueType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0b0L);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872035015480");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPropertyType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "PropertyType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0a9L);
    b.class_(false, false, false);
    b.super_("FactSL.structure.FactType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa69f0fL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa83b3aL);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872034984105");
    b.version(2);
    b.associate("prange", 0x2613bb9aeaa7c0abL).target(0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0a6L).optional(false).origin("2743742872034984107").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemperature() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "Temperature", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa83b37L);
    b.class_(false, false, false);
    b.super_("FactSL.structure.ValueType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0b0L);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872035015479");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTime() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "Time", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa83b2fL);
    b.class_(false, false, false);
    b.super_("FactSL.structure.ValueType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0b0L);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872035015471");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTruthValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "TruthValue", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa83b39L);
    b.class_(false, false, false);
    b.super_("FactSL.structure.ValueType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0b0L);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872035015481");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForValueType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "ValueType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0b0L);
    b.class_(false, true, false);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872034984112");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVelocity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "Velocity", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa83b36L);
    b.class_(false, false, false);
    b.super_("FactSL.structure.ValueType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0b0L);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872035015478");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVolume() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FactSL", "Volume", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa83b35L);
    b.class_(false, false, false);
    b.super_("FactSL.structure.ValueType", 0x6836a913df904e79L, 0x9a37cb334bb02ea5L, 0x2613bb9aeaa7c0b0L);
    b.origin("r:f1a25cd6-a3b6-4f11-9ab9-8603c9aa5ff0(FactSL.structure)/2743742872035015477");
    b.version(2);
    return b.create();
  }
}
