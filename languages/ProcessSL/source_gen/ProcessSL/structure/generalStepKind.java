package ProcessSL.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum generalStepKind {
  request("request", "rq"),
  promiss("promiss", "pm"),
  execute("execute", "ex"),
  state("state", "st"),
  accept("accept", "ac"),
  decline("decline", "dc"),
  quit("quit", "qt"),
  reject("reject", "rj"),
  stop("stop", "sp");

  private final String myName;
  public String getName() {
    return myName;
  }
  private final String myValue;
  private generalStepKind(String name, String value) {
    myName = name;
    myValue = value;
  }
  public String getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return myValue;
  }
  public static List<generalStepKind> getConstants() {
    List<generalStepKind> list = ListSequence.fromList(new LinkedList<generalStepKind>());
    ListSequence.fromList(list).addElement(generalStepKind.request);
    ListSequence.fromList(list).addElement(generalStepKind.promiss);
    ListSequence.fromList(list).addElement(generalStepKind.execute);
    ListSequence.fromList(list).addElement(generalStepKind.state);
    ListSequence.fromList(list).addElement(generalStepKind.accept);
    ListSequence.fromList(list).addElement(generalStepKind.decline);
    ListSequence.fromList(list).addElement(generalStepKind.quit);
    ListSequence.fromList(list).addElement(generalStepKind.reject);
    ListSequence.fromList(list).addElement(generalStepKind.stop);
    return list;
  }
  public static generalStepKind getDefault() {
    return null;
  }
  public static generalStepKind parseValue(String value) {
    if (value == null) {
      return generalStepKind.getDefault();
    }
    if (value.equals(generalStepKind.request.getValueAsString())) {
      return generalStepKind.request;
    }
    if (value.equals(generalStepKind.promiss.getValueAsString())) {
      return generalStepKind.promiss;
    }
    if (value.equals(generalStepKind.execute.getValueAsString())) {
      return generalStepKind.execute;
    }
    if (value.equals(generalStepKind.state.getValueAsString())) {
      return generalStepKind.state;
    }
    if (value.equals(generalStepKind.accept.getValueAsString())) {
      return generalStepKind.accept;
    }
    if (value.equals(generalStepKind.decline.getValueAsString())) {
      return generalStepKind.decline;
    }
    if (value.equals(generalStepKind.quit.getValueAsString())) {
      return generalStepKind.quit;
    }
    if (value.equals(generalStepKind.reject.getValueAsString())) {
      return generalStepKind.reject;
    }
    if (value.equals(generalStepKind.stop.getValueAsString())) {
      return generalStepKind.stop;
    }
    return generalStepKind.getDefault();
  }
}
