package ProcessSL.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum RevokePatternStepKind {
  revoke_request("revoke request", "rv-rq"),
  revoke_promiss("revoke promiss", "rv-pm"),
  revoke_state("revoke state", "rv-st"),
  revoke_accept("revoke accept", "rv-ac"),
  allow("allow", "al"),
  refuse("refuse", "rf");

  private final String myName;
  public String getName() {
    return myName;
  }
  private final String myValue;
  private RevokePatternStepKind(String name, String value) {
    myName = name;
    myValue = value;
  }
  public String getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return myValue;
  }
  public static List<RevokePatternStepKind> getConstants() {
    List<RevokePatternStepKind> list = ListSequence.fromList(new LinkedList<RevokePatternStepKind>());
    ListSequence.fromList(list).addElement(RevokePatternStepKind.revoke_request);
    ListSequence.fromList(list).addElement(RevokePatternStepKind.revoke_promiss);
    ListSequence.fromList(list).addElement(RevokePatternStepKind.revoke_state);
    ListSequence.fromList(list).addElement(RevokePatternStepKind.revoke_accept);
    ListSequence.fromList(list).addElement(RevokePatternStepKind.allow);
    ListSequence.fromList(list).addElement(RevokePatternStepKind.refuse);
    return list;
  }
  public static RevokePatternStepKind getDefault() {
    return RevokePatternStepKind.revoke_request;
  }
  public static RevokePatternStepKind parseValue(String value) {
    if (value == null) {
      return RevokePatternStepKind.getDefault();
    }
    if (value.equals(RevokePatternStepKind.revoke_request.getValueAsString())) {
      return RevokePatternStepKind.revoke_request;
    }
    if (value.equals(RevokePatternStepKind.revoke_promiss.getValueAsString())) {
      return RevokePatternStepKind.revoke_promiss;
    }
    if (value.equals(RevokePatternStepKind.revoke_state.getValueAsString())) {
      return RevokePatternStepKind.revoke_state;
    }
    if (value.equals(RevokePatternStepKind.revoke_accept.getValueAsString())) {
      return RevokePatternStepKind.revoke_accept;
    }
    if (value.equals(RevokePatternStepKind.allow.getValueAsString())) {
      return RevokePatternStepKind.allow;
    }
    if (value.equals(RevokePatternStepKind.refuse.getValueAsString())) {
      return RevokePatternStepKind.refuse;
    }
    return RevokePatternStepKind.getDefault();
  }
}
